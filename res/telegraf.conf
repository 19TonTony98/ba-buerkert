
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["http://172.18.0.2:8086"]
  token = "BrqgG5LBCVEKB584i5UthgbfBpapJw6FIadUV4-iz8fthCMkKbvUbUA5PGpC4AGZhg46QPyUtEAbYpJnN0jzmg=="
  organization = "HSWT"
  bucket = "sample-bucket"
  tls_cert = "/etc/telegraf/cert.pem"
  tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = false
  
[[inputs.opcua]]
  name = "opcua"
  endpoint = "opc.tcp://10.154.4.38:4840/freeopcua/server/"
    ## Security policy, one of "None", "Basic128Rsa15", "Basic256",
  ## "Basic256Sha256", or "auto"
  security_policy = "auto"
  #
  ## Security mode, one of "None", "Sign", "SignAndEncrypt", or "auto"
  security_mode = "auto"
  #
  ## Path to cert.pem. Required when security mode or policy isn't "None".
  ## If cert path is not supplied, self-signed cert and key will be generated.
  certificate = "/etc/telegraf/cert.pem"
  #
  ## Path to private key.pem. Required when security mode or policy isn't "None".
  ## If key path is not supplied, self-signed cert and key will be generated.
  private_key = "/etc/telegraf/key.pem"
  #
  ## Authentication Method, one of "Certificate", "UserName", or "Anonymous".  To
  ## authenticate using a specific ID, select 'Certificate' or 'UserName'
  auth_method = "Anonymous"
  timestamp = "gather"

  [[inputs.opcua.group]]
    name = "400"
    namespace = "2"
    identifier_type = "i"


    [[inputs.opcua.group.nodes]]
      name="Temperatur"
      identifier = "3"
      default_tags = { sensor_id = "I1", display = "VAR1" }

    [[inputs.opcua.group.nodes]]
      name="Temperatur"
      identifier = "4"
      default_tags = { sensor_id = "I2", display = "VAR2" }

    [[inputs.opcua.group.nodes]]
      name="Druck"
      identifier = "5"
      default_tags = { sensor_id = "I3", display = "VAR3" }

  [[inputs.opcua.group]]
    name = "400"
    namespace = "3"
    identifier_type = "i"


    [[inputs.opcua.group.nodes]]
      name="Druck"
      identifier = "3"
      default_tags = { sensor_id = "O1", display = "VAR7" }

    [[inputs.opcua.group.nodes]]
      name="Druck"
      identifier = "4"
      default_tags = { sensor_id = "O2", display = "VAR8" }
